---
name: CI

on:
    push:
        branches:
            - development
            - stable
    pull_request:
    schedule:
        - cron: 0 0 * * 0 # weekly

jobs:
    build-linux:
        runs-on: ubuntu-latest
        steps:
            - name: Persist the bazel cache
              uses: actions/cache@v2
              with:
                  path: ~/.cache/bazel/_bazel_runner
                  key: bazel-${{ runner.os }}-${{ hashFiles('WORKSPACE') }}-${{ hashFiles('**/BUILD') }}
                  restore-keys: |
                      bazel-${{ runner.os }}-${{ hashFiles('WORKSPACE') }}-
                      bazel-${{ runner.os }}-

            - uses: actions/checkout@v2

            - uses: actions/setup-python@v2
              with:
                  python-version: 3.9

            - name: Install build dependencies
              uses: ./.github/actions/install-build-dependencies

            - name: Build Python wheel
              run: make bdist_wheel bdist_wheel-linux-rename
              env:
                  CC: clang
                  CXX: clang++
                  BAZEL_OPTS: --batch
                  BAZEL_FETCH_OPTS: --config=ci
                  BAZEL_BUILD_OPTS: --config=ci

            - name: Upload Python wheel
              uses: actions/upload-artifact@v2
              with:
                  name: linux-wheel
                  path: dist/*.whl
                  if-no-files-found: error
                  retention-days: 7

    build-macos:
        runs-on: macos-latest
        steps:
            - name: Persist the bazel cache
              uses: actions/cache@v2
              with:
                  path: /private/var/tmp/_bazel_runner
                  key: bazel-${{ runner.os }}-${{ hashFiles('WORKSPACE') }}-${{ hashFiles('**/BUILD') }}
                  restore-keys: |
                      bazel-${{ runner.os }}-${{ hashFiles('WORKSPACE') }}-
                      bazel-${{ runner.os }}-

            - uses: actions/checkout@v2

            - uses: actions/setup-python@v2
              with:
                  python-version: 3.9

            - name: Install build dependencies
              uses: ./.github/actions/install-build-dependencies

            - name: Build Python wheel
              run: make bdist_wheel
              env:
                  BAZEL_OPTS: --batch
                  BAZEL_FETCH_OPTS: --config=ci
                  BAZEL_BUILD_OPTS: --config=ci

            - name: Upload Python wheel
              uses: actions/upload-artifact@v2
              with:
                  name: macos-wheel
                  path: dist/*.whl
                  if-no-files-found: error
                  retention-days: 7

    test-linux:
        needs: build-linux
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python: [3.6, 3.7, 3.8, 3.9]
        steps:
            - uses: actions/checkout@v2

            - name: Set up Python ${{ matrix.python }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python }}

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: linux-wheel

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r tests/requirements.txt

            - name: Run the test suite
              run: make install-test-cov PYTEST_ARGS="--ignore tests/llvm --ignore tests/gcc --ignore tests/loop_tool"

            - name: Upload coverage report to Codecov
              uses: codecov/codecov-action@v2
    test-macos:
        needs: build-macos
        runs-on: macos-latest
        strategy:
            fail-fast: false
            matrix:
                python: [3.8, 3.9]
        steps:
            - uses: actions/checkout@v2

            - name: Set up Python ${{ matrix.python }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python }}

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: macos-wheel

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r tests/requirements.txt

            - name: Run the test suite
              run: make install-test-cov PYTEST_ARGS="--ignore tests/llvm --ignore tests/gcc"

            - name: Upload coverage report to Codecov
              uses: codecov/codecov-action@v2
    test-llvm-env-linux:
        needs: build-linux
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python: [3.6, 3.7, 3.8, 3.9]
        steps:
            - uses: actions/checkout@v2

            - name: Set up Python ${{ matrix.python }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python }}

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: linux-wheel

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r tests/requirements.txt

            - name: Run the test suite
              run: make install-test-cov TEST_TARGET="tests/llvm"

            - name: Upload coverage report to Codecov
              uses: codecov/codecov-action@v2
    test-llvm-env-macos:
        needs: build-macos
        runs-on: macos-latest
        strategy:
            fail-fast: false
            matrix:
                python: [3.9]
        steps:
            - uses: actions/checkout@v2

            - name: Set up Python ${{ matrix.python }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python }}

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: macos-wheel

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r tests/requirements.txt

            - name: Run the test suite
              run: make install-test-cov TEST_TARGET="tests/llvm"

            - name: Upload coverage report to Codecov
              uses: codecov/codecov-action@v2
    test-gcc-env-linux:
        needs: build-linux
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python: [3.9]
        steps:
            - uses: actions/checkout@v2

            - name: Set up Python ${{ matrix.python }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python }}

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: linux-wheel

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r tests/requirements.txt

            - name: Run the test suite
              run: make install-test-cov TEST_TARGET="tests/gcc"

            - name: Upload coverage report to Codecov
              uses: codecov/codecov-action@v2
    test-gcc-env-linux-no-docker:
        needs: build-linux
        runs-on: ubuntu-latest
        steps:
            - name: Stop docker
              run: |
                  docker ps -q | xargs --no-run-if-empty sudo docker kill
                  sudo systemctl stop docker
                  sudo apt-get remove -y docker docker-engine docker.io containerd runc

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: 3.9

            - uses: actions/checkout@v2

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: linux-wheel

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r tests/requirements.txt

            - name: Run the test suite
              run: make install-test-cov TEST_TARGET="tests/gcc"

            - name: Upload coverage report to Codecov
              uses: codecov/codecov-action@v2

    test-gcc-env-macos:
        needs: build-macos
        runs-on: macos-latest
        steps:
            - uses: docker-practice/actions-setup-docker@master

            - name: Confirm docker install
              run: docker version

            - uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: 3.9

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: macos-wheel

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r tests/requirements.txt

            - name: Run the test suite
              run: make install-test-cov TEST_TARGET="tests/gcc"

            - name: Upload coverage report to Codecov
              uses: codecov/codecov-action@v2

    test-gcc-env-macos-no-docker:
        needs: build-macos
        runs-on: macos-latest
        steps:
            - uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: 3.9

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: macos-wheel

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r tests/requirements.txt

            - name: Run the test suite
              run: make install-test-cov TEST_TARGET="tests/gcc"

            - name: Upload coverage report to Codecov
              uses: codecov/codecov-action@v2

    test-loop_tool-env-linux:
        needs: build-linux
        runs-on: ubuntu-latest
        steps:
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: 3.9

            - uses: actions/checkout@v2

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: linux-wheel

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r tests/requirements.txt

            - name: Run the test suite
              run: make install-test-cov TEST_TARGET="tests/loop_tool"

            - name: Upload coverage report to Codecov
              uses: codecov/codecov-action@v2

    test-loop_tool-env-macos:
        needs: build-macos
        runs-on: macos-latest
        steps:
            - uses: docker-practice/actions-setup-docker@master

            - name: Confirm docker install
              run: docker version

            - uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: 3.9

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: macos-wheel

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r tests/requirements.txt

            - name: Run the test suite
              run: make install-test-cov TEST_TARGET="tests/loop_tool"

            - name: Upload coverage report to Codecov
              uses: codecov/codecov-action@v2

    test-examples-linux:
        needs: build-linux
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python: [3.6, 3.7, 3.8, 3.9]
        steps:
            - uses: actions/checkout@v2

            - name: Set up Python ${{ matrix.python }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python }}

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: linux-wheel

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r examples/requirements.txt -r tests/requirements.txt

            - name: Run the test suite
              run: make examples-test

            - name: Upload coverage report to Codecov
              uses: codecov/codecov-action@v2

    test-examples-macos:
        needs: build-macos
        runs-on: macos-latest
        strategy:
            fail-fast: false
            matrix:
                python: [3.9]
        steps:
            - uses: actions/checkout@v2

            - name: Set up Python ${{ matrix.python }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python }}

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: macos-wheel

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r examples/requirements.txt -r tests/requirements.txt

            - name: Run the test suite
              run: make examples-test

            - name: Upload coverage report to Codecov
              uses: codecov/codecov-action@v2

    build-asan-llvm-service:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: Setup python
              uses: actions/setup-python@v2
              with:
                  python-version: 3.9

            - name: Install build dependencies
              uses: ./.github/actions/install-build-dependencies

            - name: Build address sanitized LLVM compiler service
              run: |
                  make bazel-build BAZEL_BUILD_OPTS=--config=asan BUILD_TARGET=//compiler_gym/envs/llvm/service:compiler_gym-llvm-service
                  tar -C bazel-bin/compiler_gym/envs/llvm/service -cjvf compiler_gym-llvm-service.tar.bz2 compiler_gym-llvm-service
              env:
                  CC: clang
                  CXX: clang++
                  BAZEL_OPTS: --batch
                  BAZEL_FETCH_OPTS: --config=ci
                  BAZEL_BUILD_OPTS: --config=ci

            - name: Upload address sanitized LLVM compiler service
              uses: actions/upload-artifact@v2
              with:
                  name: compiler_gym-llvm-service-linux-asan-build
                  path: compiler_gym-llvm-service.tar.bz2
                  if-no-files-found: error
                  retention-days: 7

    test-llvm-env-asan-linux:
        runs-on: ubuntu-latest
        needs: [build-linux, build-asan-llvm-service]
        steps:
            - uses: actions/checkout@v2

            - name: Setup python
              uses: actions/setup-python@v2
              with:
                  python-version: 3.9

            - name: Download Python wheel
              uses: actions/download-artifact@v2
              with:
                  name: linux-wheel

            - name: Download address sanitized LLVM compiler service
              uses: actions/download-artifact@v2
              with:
                  name: compiler_gym-llvm-service-linux-asan-build

            - name: Repack wheel
              run: |
                  tar xjvf compiler_gym-llvm-service.tar.bz2
                  rm compiler_gym-llvm-service.tar.bz2
                  chmod +x compiler_gym-llvm-service
                  python -m pip install -U wheel
                  wheel unpack *.whl
                  rm *.whl
                  chmod +x compiler_gym-*/compiler_gym-*.data/purelib/compiler_gym/third_party/csmith/csmith/bin/csmith
                  chmod +x compiler_gym-*/compiler_gym-*.data/purelib/compiler_gym/envs/llvm/service/compute_observation
                  mv compiler_gym-llvm-service compiler_gym-*/compiler_gym-*.data/purelib/compiler_gym/envs/llvm/service/compiler_gym-llvm-service
                  wheel pack compiler_gym-*

            - name: Install wheel
              run: python -m pip install *.whl

            - name: Install runtime dependencies
              uses: ./.github/actions/install-runtime-dependencies

            - name: Install test dependencies
              run: python -m pip install -r tests/requirements.txt

            - name: Test
              run: make install-test TEST_TARGET=tests/llvm
              env:
                  ASAN_OPTIONS: detect_leaks=1
                  CC: clang
                  CXX: clang++

    www-build:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest]
                node: [16]
        steps:
            - uses: actions/checkout@v2

            - uses: actions/setup-python@v2
              with:
                  python-version: 3.9

            - uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node }}
                  cache: npm
                  cache-dependency-path: www/frontends/compiler_gym/package-lock.json

            - name: Build web frontend
              run: make www-build
